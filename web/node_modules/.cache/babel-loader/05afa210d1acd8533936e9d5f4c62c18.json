{"ast":null,"code":"'use strict';\n\nconst platformAndArch = require('./platform')();\n/* istanbul ignore next */\n\n\ntry {\n  module.exports = require(`../build/Release/sharp-${platformAndArch}.node`);\n} catch (err) {\n  // Bail early if bindings aren't available\n  const help = ['', 'Something went wrong installing the \"sharp\" module', '', err.message, '', 'Possible solutions:'];\n\n  if (/dylib/.test(err.message) && /Incompatible library version/.test(err.message)) {\n    help.push('- Update Homebrew: \"brew update && brew upgrade vips\"');\n  } else {\n    help.push('- Install with the --verbose flag and look for errors: \"npm install --ignore-scripts=false --verbose sharp\"', `- Install for the current runtime: \"npm install --platform=${process.platform} --arch=${process.arch} sharp\"`);\n  }\n\n  help.push('- Consult the installation documentation: https://sharp.pixelplumbing.com/install'); // Check loaded\n\n  if (process.platform === 'win32') {\n    const loadedModule = Object.keys(require.cache).find(i => /[\\\\/]build[\\\\/]Release[\\\\/]sharp(.*)\\.node$/.test(i));\n\n    if (loadedModule) {\n      const [, loadedPackage] = loadedModule.match(/node_modules[\\\\/]([^\\\\/]+)[\\\\/]/);\n      help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: \"npm ls sharp\"`);\n    }\n  }\n\n  throw new Error(help.join('\\n'));\n}","map":{"version":3,"sources":["/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/mekamountpfp/node_modules/sharp/lib/sharp.js"],"names":["platformAndArch","require","module","exports","err","help","message","test","push","process","platform","arch","loadedModule","Object","keys","cache","find","i","loadedPackage","match","Error","join"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,YAAD,CAAP,EAAxB;AAEA;;;AACA,IAAI;AACFC,EAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAAE,0BAAyBD,eAAgB,OAA3C,CAAxB;AACD,CAFD,CAEE,OAAOI,GAAP,EAAY;AACZ;AACA,QAAMC,IAAI,GAAG,CAAC,EAAD,EAAK,oDAAL,EAA2D,EAA3D,EAA+DD,GAAG,CAACE,OAAnE,EAA4E,EAA5E,EAAgF,qBAAhF,CAAb;;AACA,MAAI,QAAQC,IAAR,CAAaH,GAAG,CAACE,OAAjB,KAA6B,+BAA+BC,IAA/B,CAAoCH,GAAG,CAACE,OAAxC,CAAjC,EAAmF;AACjFD,IAAAA,IAAI,CAACG,IAAL,CAAU,uDAAV;AACD,GAFD,MAEO;AACLH,IAAAA,IAAI,CAACG,IAAL,CACE,6GADF,EAEG,8DAA6DC,OAAO,CAACC,QAAS,WAAUD,OAAO,CAACE,IAAK,SAFxG;AAID;;AACDN,EAAAA,IAAI,CAACG,IAAL,CACE,mFADF,EAXY,CAcZ;;AACA,MAAIC,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AAChC,UAAME,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYb,OAAO,CAACc,KAApB,EAA2BC,IAA3B,CAAiCC,CAAD,IAAO,8CAA8CV,IAA9C,CAAmDU,CAAnD,CAAvC,CAArB;;AACA,QAAIL,YAAJ,EAAkB;AAChB,YAAM,GAAGM,aAAH,IAAoBN,YAAY,CAACO,KAAb,CAAmB,iCAAnB,CAA1B;AACAd,MAAAA,IAAI,CAACG,IAAL,CAAW,iDAAgDU,aAAc,0BAAzE;AACD;AACF;;AACD,QAAM,IAAIE,KAAJ,CAAUf,IAAI,CAACgB,IAAL,CAAU,IAAV,CAAV,CAAN;AACD","sourcesContent":["'use strict';\n\nconst platformAndArch = require('./platform')();\n\n/* istanbul ignore next */\ntry {\n  module.exports = require(`../build/Release/sharp-${platformAndArch}.node`);\n} catch (err) {\n  // Bail early if bindings aren't available\n  const help = ['', 'Something went wrong installing the \"sharp\" module', '', err.message, '', 'Possible solutions:'];\n  if (/dylib/.test(err.message) && /Incompatible library version/.test(err.message)) {\n    help.push('- Update Homebrew: \"brew update && brew upgrade vips\"');\n  } else {\n    help.push(\n      '- Install with the --verbose flag and look for errors: \"npm install --ignore-scripts=false --verbose sharp\"',\n      `- Install for the current runtime: \"npm install --platform=${process.platform} --arch=${process.arch} sharp\"`\n    );\n  }\n  help.push(\n    '- Consult the installation documentation: https://sharp.pixelplumbing.com/install'\n  );\n  // Check loaded\n  if (process.platform === 'win32') {\n    const loadedModule = Object.keys(require.cache).find((i) => /[\\\\/]build[\\\\/]Release[\\\\/]sharp(.*)\\.node$/.test(i));\n    if (loadedModule) {\n      const [, loadedPackage] = loadedModule.match(/node_modules[\\\\/]([^\\\\/]+)[\\\\/]/);\n      help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: \"npm ls sharp\"`);\n    }\n  }\n  throw new Error(help.join('\\n'));\n}\n"]},"metadata":{},"sourceType":"script"}