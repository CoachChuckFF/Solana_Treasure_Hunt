{"ast":null,"code":"'use strict';\n\nconst detectLibc = require('detect-libc');\n\nconst env = process.env;\n\nmodule.exports = function () {\n  const arch = env.npm_config_arch || process.arch;\n  const platform = env.npm_config_platform || process.platform;\n  /* istanbul ignore next */\n\n  const libc = platform === 'linux' && detectLibc.isNonGlibcLinux ? detectLibc.family : '';\n  const platformId = [`${platform}${libc}`];\n\n  if (arch === 'arm') {\n    const fallback = process.versions.electron ? '7' : '6';\n    platformId.push(`armv${env.npm_config_arm_version || process.config.variables.arm_version || fallback}`);\n  } else if (arch === 'arm64') {\n    platformId.push(`arm64v${env.npm_config_arm_version || '8'}`);\n  } else {\n    platformId.push(arch);\n  }\n\n  return platformId.join('-');\n};","map":{"version":3,"sources":["/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/node_modules/sharp/lib/platform.js"],"names":["detectLibc","require","env","process","module","exports","arch","npm_config_arch","platform","npm_config_platform","libc","isNonGlibcLinux","family","platformId","fallback","versions","electron","push","npm_config_arm_version","config","variables","arm_version","join"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC3B,QAAMC,IAAI,GAAGJ,GAAG,CAACK,eAAJ,IAAuBJ,OAAO,CAACG,IAA5C;AACA,QAAME,QAAQ,GAAGN,GAAG,CAACO,mBAAJ,IAA2BN,OAAO,CAACK,QAApD;AACA;;AACA,QAAME,IAAI,GAAIF,QAAQ,KAAK,OAAb,IAAwBR,UAAU,CAACW,eAApC,GAAuDX,UAAU,CAACY,MAAlE,GAA2E,EAAxF;AAEA,QAAMC,UAAU,GAAG,CAAE,GAAEL,QAAS,GAAEE,IAAK,EAApB,CAAnB;;AAEA,MAAIJ,IAAI,KAAK,KAAb,EAAoB;AAClB,UAAMQ,QAAQ,GAAGX,OAAO,CAACY,QAAR,CAAiBC,QAAjB,GAA4B,GAA5B,GAAkC,GAAnD;AACAH,IAAAA,UAAU,CAACI,IAAX,CAAiB,OAAMf,GAAG,CAACgB,sBAAJ,IAA8Bf,OAAO,CAACgB,MAAR,CAAeC,SAAf,CAAyBC,WAAvD,IAAsEP,QAAS,EAAtG;AACD,GAHD,MAGO,IAAIR,IAAI,KAAK,OAAb,EAAsB;AAC3BO,IAAAA,UAAU,CAACI,IAAX,CAAiB,SAAQf,GAAG,CAACgB,sBAAJ,IAA8B,GAAI,EAA3D;AACD,GAFM,MAEA;AACLL,IAAAA,UAAU,CAACI,IAAX,CAAgBX,IAAhB;AACD;;AAED,SAAOO,UAAU,CAACS,IAAX,CAAgB,GAAhB,CAAP;AACD,CAlBD","sourcesContent":["'use strict';\n\nconst detectLibc = require('detect-libc');\n\nconst env = process.env;\n\nmodule.exports = function () {\n  const arch = env.npm_config_arch || process.arch;\n  const platform = env.npm_config_platform || process.platform;\n  /* istanbul ignore next */\n  const libc = (platform === 'linux' && detectLibc.isNonGlibcLinux) ? detectLibc.family : '';\n\n  const platformId = [`${platform}${libc}`];\n\n  if (arch === 'arm') {\n    const fallback = process.versions.electron ? '7' : '6';\n    platformId.push(`armv${env.npm_config_arm_version || process.config.variables.arm_version || fallback}`);\n  } else if (arch === 'arm64') {\n    platformId.push(`arm64v${env.npm_config_arm_version || '8'}`);\n  } else {\n    platformId.push(arch);\n  }\n\n  return platformId.join('-');\n};\n"]},"metadata":{},"sourceType":"script"}