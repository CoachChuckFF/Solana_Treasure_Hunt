{"ast":null,"code":"// Requires \"axios\" and \"form-data\" to be installed (see https://www.npmjs.com/package/axios and https://www.npmjs.com/package/form-data)\nconst https = require('https'); // or 'https' for https:// URLs\n\n\nconst axios = require('axios');\n\nconst FormData = require('form-data');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst mergeImages = require('merge-images');\n\nconst sharp = require('sharp');\n\nconst {\n  Canvas,\n  Image\n} = require('canvas');\n\nfunction downloadIMG(url, outputPath, callback) {\n  var file = fs.createWriteStream(outputPath);\n  var request = https.get(url, function (response) {\n    response.pipe(file);\n    file.on('finish', function () {\n      file.close(callback); // close() is async, call cb after close completes.\n    });\n  }).on('error', function (err) {\n    // Handle errors\n    fs.unlink(outputPath); // Delete the file async. (But we don't check the result)\n\n    if (callback) callback(err.message);\n  });\n}\n\n;\n\nfunction removeBGAPI(inputPath, outputPath, callback) {\n  const formData = new FormData();\n  formData.append('image_file', fs.createReadStream(inputPath), path.basename(inputPath));\n  formData.append('size', 'preview');\n  formData.append('type', 'auto');\n  formData.append('type_level', 'latest');\n  formData.append('format', 'png');\n  axios({\n    method: 'post',\n    url: 'https://api.remove.bg/v1.0/removebg',\n    data: formData,\n    responseType: 'arraybuffer',\n    headers: { ...formData.getHeaders(),\n      'X-Api-Key': 'S73qUka2SUJ1p9KWDEQB4sFk'\n    },\n    encoding: null\n  }).then(response => {\n    if (response.status != 200) return console.error('Error:', response.status, response.statusText);\n    fs.writeFileSync(outputPath, response.data);\n    if (callback) callback();\n  }).catch(error => {\n    return console.error('Request failed:', error);\n  });\n}\n\nfunction resizeIMG(inputFile, outputFile, size, callback) {\n  sharp(inputFile).resize({\n    height: size\n  }).toFile(outputFile).then(function (newFileInfo) {\n    if (callback) callback();\n  }).catch(function (err) {\n    console.log(\"Error occured\");\n  });\n}\n\nfunction mergeIMG(backgroundPath, foregroundPath, outputFile, forgroundX, forgroundY, callback) {\n  mergeImages([{\n    src: backgroundPath,\n    x: 0,\n    y: 0\n  }, {\n    src: foregroundPath,\n    x: forgroundX,\n    y: forgroundY\n  }], {\n    Canvas: Canvas,\n    Image: Image\n  }).then(b64 => {\n    fs.writeFileSync(outputFile, b64.split(';base64,').pop(), {\n      encoding: 'base64'\n    });\n    if (callback) callback();\n  });\n}\n\nfunction cleanIMG(files, callback) {\n  files.forEach(file => fs.unlinkSync(file));\n  if (callback) callback();\n} //SS\n// const pfpURL = 'https://xcsge4ptzkihajfxjtct4d4yzyik3suuiciskya4pwnrzbx4qpsq.arweave.net/uKRicfPKkHAkt0zFPg-YzhCtypRAkSVgHH2bHIb8g-U';\n//PP\n\n\nconst pfpURL = 'https://pqyul4skaef6irxou72ihe7ip6kodd5x3mg63wjdjkoheaqhxdnq.arweave.net/fDFF8koBC-RG7qf0g5Pof5Thj7fbDe3ZI0qccgIHuNs';\nconst bgURL = 'https://d63yr2nutiaxwromer6mae4r46xhplxrjiu2pu26w3lilt3r5l5a.arweave.net/H7eI6bSaAXtFzCR8wBOR5653rvFKKafTXrbWhc9x6vo';\nconst pfpPath = './img/pfp.png';\nconst bgPath = './img/mek.png';\nconst pfpAlphaPath = './img/pfpAlpha.png';\nconst pfpMiniAlphaPath = './img/pfpMiniAlpha.png';\nconst finalPath = './img/mekaFinalForm.png';\nconst mekSize = 2222;\nconst pfpScale = 0.18;\nconst pfpCenterX = 355;\nconst pfpBottomY = 560; //Helpers \n\nfunction getPFPSize() {\n  return Math.round(mekSize * pfpScale) + 2 * (Math.round(mekSize * pfpScale) % 2);\n} //Main\n//Steps\n\n\nfunction runScript() {\n  console.log('MekaMount Building....');\n  downloadPFP();\n}\n\nfunction downloadPFP() {\n  var _process$argv$;\n\n  console.log('Downloading PFP...');\n  downloadIMG((_process$argv$ = process.argv[3]) !== null && _process$argv$ !== void 0 ? _process$argv$ : pfpURL, pfpPath, downloadBG);\n}\n\nfunction downloadBG() {\n  var _process$argv$2;\n\n  console.log('Downloading Mount...');\n  downloadIMG((_process$argv$2 = process.argv[2]) !== null && _process$argv$2 !== void 0 ? _process$argv$2 : bgURL, bgPath, removeBG);\n}\n\nfunction removeBG() {\n  console.log('Stripping PFP...');\n  removeBGAPI(pfpPath, pfpAlphaPath, resizePFP);\n}\n\nfunction resizePFP() {\n  console.log('[ENHANCE]');\n  resizeIMG(pfpAlphaPath, pfpMiniAlphaPath, getPFPSize(), mergePFPnBG);\n}\n\nfunction mergePFPnBG() {\n  console.log('Merging...');\n  mergeIMG(bgPath, pfpMiniAlphaPath, finalPath, pfpCenterX - getPFPSize() / 2, pfpBottomY - getPFPSize(), cleanUp);\n}\n\nfunction cleanUp() {\n  console.log(\"Cleaning...\");\n  cleanIMG([bgPath, pfpPath, pfpAlphaPath, pfpMiniAlphaPath], finish);\n}\n\nfunction finish() {\n  console.log(\"Locked N Loaded!\");\n}\n\nrunScript();","map":{"version":3,"sources":["/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/mekamountpfp/src/createMekamount.js"],"names":["https","require","axios","FormData","fs","path","mergeImages","sharp","Canvas","Image","downloadIMG","url","outputPath","callback","file","createWriteStream","request","get","response","pipe","on","close","err","unlink","message","removeBGAPI","inputPath","formData","append","createReadStream","basename","method","data","responseType","headers","getHeaders","encoding","then","status","console","error","statusText","writeFileSync","catch","resizeIMG","inputFile","outputFile","size","resize","height","toFile","newFileInfo","log","mergeIMG","backgroundPath","foregroundPath","forgroundX","forgroundY","src","x","y","b64","split","pop","cleanIMG","files","forEach","unlinkSync","pfpURL","bgURL","pfpPath","bgPath","pfpAlphaPath","pfpMiniAlphaPath","finalPath","mekSize","pfpScale","pfpCenterX","pfpBottomY","getPFPSize","Math","round","runScript","downloadPFP","process","argv","downloadBG","removeBG","resizePFP","mergePFPnBG","cleanUp","finish"],"mappings":"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","sourcesContent":["// Requires \"axios\" and \"form-data\" to be installed (see https://www.npmjs.com/package/axios and https://www.npmjs.com/package/form-data)\nconst https = require('https'); // or 'https' for https:// URLs\nconst axios = require('axios');\nconst FormData = require('form-data');\nconst fs = require('fs');\nconst path = require('path');\nconst mergeImages = require('merge-images');\nconst sharp = require('sharp');\nconst { Canvas, Image } = require('canvas');\n\nfunction downloadIMG(url, outputPath, callback) {\n  var file = fs.createWriteStream(outputPath);\n  var request = https.get(url, function(response) {\n    response.pipe(file);\n    file.on('finish', function() {\n      file.close(callback);  // close() is async, call cb after close completes.\n    });\n  }).on('error', function(err) { // Handle errors\n    fs.unlink(outputPath); // Delete the file async. (But we don't check the result)\n    if (callback) callback(err.message);\n  });\n};\n\nfunction removeBGAPI(inputPath, outputPath, callback){\n    const formData = new FormData();\n    formData.append('image_file', fs.createReadStream(inputPath), path.basename(inputPath));\n    formData.append('size', 'preview');\n    formData.append('type', 'auto');\n    formData.append('type_level', 'latest');\n    formData.append('format', 'png');\n\n    axios({\n      method: 'post',\n      url: 'https://api.remove.bg/v1.0/removebg',\n      data: formData,\n      responseType: 'arraybuffer',\n      headers: {\n        ...formData.getHeaders(),\n        'X-Api-Key': 'S73qUka2SUJ1p9KWDEQB4sFk',\n    \n      },\n      encoding: null\n    })\n    .then((response) => {\n      if(response.status != 200) return console.error('Error:', response.status, response.statusText);\n      fs.writeFileSync(outputPath, response.data);\n      if (callback) callback();\n    })\n    .catch((error) => {\n        return console.error('Request failed:', error);\n    });\n}\n\nfunction resizeIMG(inputFile, outputFile, size, callback){\n\n    sharp(inputFile).resize({ height: size }).toFile(outputFile)\n    .then(function(newFileInfo) {\n        if(callback) callback();\n    })\n    .catch(function(err) {\n        console.log(\"Error occured\");\n    });\n}\n\nfunction mergeIMG(backgroundPath, foregroundPath, outputFile, forgroundX, forgroundY, callback){\n    mergeImages(\n        [{ src: backgroundPath, x: 0, y: 0 },\n        { src: foregroundPath, x: forgroundX, y: forgroundY},],\n        {Canvas: Canvas, Image: Image}\n    ).then(b64 => {\n        fs.writeFileSync(outputFile, b64.split(';base64,').pop(), {encoding: 'base64'});\n        if(callback) callback();\n    })\n}\n\nfunction cleanIMG(files, callback){\n    files.forEach((file)=>fs.unlinkSync(file));\n    if(callback) callback();\n}\n\n//SS\n// const pfpURL = 'https://xcsge4ptzkihajfxjtct4d4yzyik3suuiciskya4pwnrzbx4qpsq.arweave.net/uKRicfPKkHAkt0zFPg-YzhCtypRAkSVgHH2bHIb8g-U';\n//PP\nconst pfpURL = 'https://pqyul4skaef6irxou72ihe7ip6kodd5x3mg63wjdjkoheaqhxdnq.arweave.net/fDFF8koBC-RG7qf0g5Pof5Thj7fbDe3ZI0qccgIHuNs';\nconst bgURL = 'https://d63yr2nutiaxwromer6mae4r46xhplxrjiu2pu26w3lilt3r5l5a.arweave.net/H7eI6bSaAXtFzCR8wBOR5653rvFKKafTXrbWhc9x6vo';\n\nconst pfpPath = './img/pfp.png';\nconst bgPath = './img/mek.png';\nconst pfpAlphaPath = './img/pfpAlpha.png';\nconst pfpMiniAlphaPath = './img/pfpMiniAlpha.png';\nconst finalPath = './img/mekaFinalForm.png';\n\nconst mekSize = 2222;\nconst pfpScale = 0.18;\nconst pfpCenterX = 355;\nconst pfpBottomY = 560;\n\n//Helpers \nfunction getPFPSize(){\n    return Math.round((mekSize * pfpScale)) + (2 * (Math.round(mekSize * pfpScale) % 2));\n}\n\n//Main\n\n//Steps\nfunction runScript(){     console.log('MekaMount Building....'); downloadPFP();}\nfunction downloadPFP(){   console.log('Downloading PFP...'); downloadIMG(process.argv[3] ?? pfpURL, pfpPath, downloadBG);}\nfunction downloadBG(){    console.log('Downloading Mount...'); downloadIMG(process.argv[2] ?? bgURL, bgPath, removeBG);}\nfunction removeBG(){      console.log('Stripping PFP...'); removeBGAPI(pfpPath, pfpAlphaPath, resizePFP);}\nfunction resizePFP(){     console.log('[ENHANCE]'); resizeIMG(pfpAlphaPath, pfpMiniAlphaPath, getPFPSize(), mergePFPnBG);}\nfunction mergePFPnBG(){   console.log('Merging...'); mergeIMG(bgPath, pfpMiniAlphaPath, finalPath, (pfpCenterX - getPFPSize() / 2), (pfpBottomY - getPFPSize()), cleanUp);}\nfunction cleanUp(){       console.log(\"Cleaning...\"); cleanIMG([bgPath, pfpPath, pfpAlphaPath, pfpMiniAlphaPath], finish);}\nfunction finish(){        console.log(\"Locked N Loaded!\");}\n\nrunScript();\n\n"]},"metadata":{},"sourceType":"module"}