{"ast":null,"code":"import _asyncToGenerator from\"/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/mekamountpfp/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/mekamountpfp/web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/mekamountpfp/web/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';// import Mekamount, { runScript } from './createMekamount.js';\nimport querystring from'query-string';import twitterLogo from'./assets/twitter-logo.svg';import mekaHolder from'./assets/meka.png';import pfpHolder from'./assets/pfp.png';import download from'downloadjs';import'./App.css';// Constants\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TWITTER_HANDLE='CoachChuckFF';var TWITTER_LINK=\"https://twitter.com/\".concat(TWITTER_HANDLE);var App=function App(){// State\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),creditsLeft=_useState2[0],setCreditsLeft=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),walletAddress=_useState4[0],setWalletAddress=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),mekAddress=_useState6[0],setMekAddress=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),pfpAddress=_useState8[0],setPfpAddress=_useState8[1];var _useState9=useState(0.15),_useState10=_slicedToArray(_useState9,2),pfpScale=_useState10[0],setPfpScale=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isBuilding=_useState12[0],setIsBuilding=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),didDownload=_useState14[0],setDidDownload=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isGettingNFTS=_useState16[0],setIsGettingNFTs=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),nftList=_useState18[0],setNftList=_useState18[1];var getURLData=function getURLData(){var baseURL=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var requestedURL=baseURL+path+(params.length==0?\"\":\"?\"+querystring.stringify(params));return new Promise(function(resolve,reject){fetch(requestedURL,{method:'GET',cache:'no-cache',headers:{'accept':'application/json'},redirect:'follow',referrerPolicy:'no-referrer'}).then(function(response){response.json().then(function(data){resolve(data);}).catch(function(error){reject(\"Could not get JSON (\".concat(requestedURL,\")\"));});}).catch(function(error){reject(\"Could not get URL (\".concat(requestedURL,\")\"));});});};var grabAllNFTs=function grabAllNFTs(){if(!isGettingNFTS){setIsGettingNFTs(true);getURLData(\"https://public-api.solscan.io\",\"/account/tokens\",{account:\"\".concat(walletAddress)}).then(function(data){//Grab NFT Tokens\nvar promises=[];data.forEach(function(token){if(token.tokenAmount!=null&&token.tokenAmount.amount==1&&token.tokenAmount.decimals==0){promises.push(getURLData(\"https://public-api.solscan.io\",\"/account/\".concat(token.tokenAddress)));}});// Get Metadata on all\nPromise.all(promises).then(function(nfts){//Grab only the useful stuff\nvar nftMetadata=[];nfts.forEach(function(nft){try{if(nft.metadata==null){throw new Error('No metadata');}if(nft.metadata.data.name==null){throw new Error('No name!');}if(nft.metadata.data.collection==null&&nft.tokenInfo.symbol==null){throw new Error(nft.metadata.data.name+\" Bad collection\");}if(nft.metadata.data.image==null){throw new Error(nft.metadata.data.name+\" Bad image\");}if(nft.account==null){throw new Error(nft.metadata.data.name+\" Bad account\");}//Fuck Collections\nvar collection=null;if(nft.metadata.data.collection!=null){if(typeof nft.metadata.data.collection==='string'){collection=nft.metadata.data.collection;}else{collection=nft.metadata.data.collection.name;}}if(collection==null)collection=nft.tokenInfo.symbol;if(collection==null)throw new Error(nft.metadata.data.name+\" Bad collection... Again\");nftMetadata.push({name:nft.metadata.data.name,collection:collection,url:nft.metadata.data.image,address:nft.account});}catch(error){console.log(error);}});//Sort\nnftMetadata.sort(function(a,b){return a.collection.localeCompare(b.collection);});//Update\nsetNftList(nftMetadata);setIsGettingNFTs(false);}).catch(function(error){alert('Could not grab ALL NFTs');console.log(error);setIsGettingNFTs(false);});}).catch(function(error){alert('Could not grab NFTs');console.log(error);setIsGettingNFTs(false);});}else{console.log(\"Crawling...\");}};var getCreditsLeft=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"/credits\");case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;setCreditsLeft(data.credits);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(\"Could not grab credits\");case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getCreditsLeft(){return _ref.apply(this,arguments);};}();var clearIMG=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"/clear/\".concat(walletAddress));case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;console.log(data);_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(\"Could not grab credits\");case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function clearIMG(){return _ref2.apply(this,arguments);};}();var downloadNewMek=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,blob,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!didDownload){_context3.next=4;break;}alert('You just downloaded!');_context3.next=37;break;case 4:if(!(mekAddress==null||pfpAddress==null)){_context3.next=8;break;}alert('Need to pick both a Mekamount and PFP');_context3.next=37;break;case 8:if(isBuilding){_context3.next=36;break;}setIsBuilding(true);_context3.prev=10;_context3.next=13;return fetch(\"/sol/\".concat(walletAddress,\"/meka/\").concat(mekAddress.address,\"/pfp/\").concat(pfpAddress.address,\"/scale/\").concat(pfpScale));case 13:response=_context3.sent;_context3.next=16;return response.blob();case 16:blob=_context3.sent;if(!(blob.size<500)){_context3.next=24;break;}_context3.next=20;return response.json();case 20:data=_context3.sent;if(data.error!=null){alert(data.error);}else{alert('Error merging NFTs');}_context3.next=28;break;case 24:download(blob,\"mekamount.png\");setDidDownload(true);getCreditsLeft();clearIMG();case 28:_context3.next=33;break;case 30:_context3.prev=30;_context3.t0=_context3[\"catch\"](10);alert('Error merging NFTs');case 33:setIsBuilding(false);_context3.next=37;break;case 36:alert('Building...');case 37:case\"end\":return _context3.stop();}}},_callee3,null,[[10,30]]);}));return function downloadNewMek(){return _ref3.apply(this,arguments);};}();var scrollToTop=function scrollToTop(){window.scrollTo({top:0,behavior:'smooth'// for smoothly scrolling\n});};var selectNFT=function selectNFT(nft){if(nft.name.includes(\"Mekamounts\")){setMekAddress(nft);}else{setPfpAddress(nft);}// scrollToTop();\n};var renderConnectedContainer=function renderConnectedContainer(){return/*#__PURE__*/_jsxs(\"div\",{className:\"connected-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selected-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selected-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:mekAddress==null?mekaHolder:mekAddress.url,alt:mekaHolder}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:mekAddress==null?\"\":\"Mekamount\"})]},\"meka\"),/*#__PURE__*/_jsxs(\"div\",{className:\"selected-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:pfpAddress==null?pfpHolder:pfpAddress.url,alt:pfpHolder}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:pfpAddress==null?\"\":\"PFP\"})]},\"pfp\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"mini-spacing\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"cta-button submit-gif-button\",onClick:downloadNewMek,disabled:isBuilding,children:didDownload?\"Complete!\":isBuilding?\"Building...\":\"Build\"}),/*#__PURE__*/_jsx(\"div\",{className:\"spacing\"}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:\"Choose your Mekamount...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"gif-grid\",children:nftList.filter(function(nft){return nft.name.includes(\"Mekamounts\");}).map(function(nft){return/*#__PURE__*/_jsxs(\"div\",{className:\"gif-item\",onClick:function onClick(){selectNFT(nft);},children:[/*#__PURE__*/_jsx(\"img\",{src:nft.url,alt:nft.url}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:nft.name}),/*#__PURE__*/_jsx(\"div\",{className:\"mini-spacing\"})]},nft.url);})}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:\"Choose your PFP...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"gif-grid\",children:nftList.filter(function(nft){return!nft.name.includes(\"Mekamounts\");}).map(function(nft){return/*#__PURE__*/_jsxs(\"div\",{className:\"gif-item\",onClick:function onClick(){selectNFT(nft);},children:[/*#__PURE__*/_jsx(\"img\",{src:nft.url,alt:nft.url}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:nft.name}),/*#__PURE__*/_jsx(\"div\",{className:\"mini-spacing\"})]},nft.url);})}),/*#__PURE__*/_jsx(\"div\",{className:\"spacing\"})]});};// Actions\nvar checkIfWalletIsConnected=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _window,solana,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_window=window,solana=_window.solana;if(!solana){_context4.next=12;break;}if(!solana.isPhantom){_context4.next=10;break;}console.log('Phantom wallet found!');_context4.next=7;return solana.connect({onlyIfTrusted:true});case 7:response=_context4.sent;console.log('Connected with Public Key:',response.publicKey.toString());setWalletAddress(response.publicKey.toString());case 10:_context4.next=13;break;case 12:alert('Solana object not found! Get a Phantom Wallet 👻');case 13:_context4.next=18;break;case 15:_context4.prev=15;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0);case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[0,15]]);}));return function checkIfWalletIsConnected(){return _ref4.apply(this,arguments);};}();var connectWallet=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var _window2,solana,response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_window2=window,solana=_window2.solana;if(!solana){_context5.next=7;break;}_context5.next=4;return solana.connect();case 4:response=_context5.sent;console.log('Connected with Public Key:',response.publicKey.toString());setWalletAddress(response.publicKey.toString());case 7:case\"end\":return _context5.stop();}}},_callee5);}));return function connectWallet(){return _ref5.apply(this,arguments);};}();// const onInputChange = (event) => {\n//   const { value } = event.target;\n//   setInputValue(value);\n// };\nvar sendGif=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:case\"end\":return _context6.stop();}}},_callee6);}));return function sendGif(){return _ref6.apply(this,arguments);};}();var renderNotConnectedContainer=function renderNotConnectedContainer(){return/*#__PURE__*/_jsx(\"button\",{className:\"cta-button connect-wallet-button\",onClick:connectWallet,children:\"Connect to Wallet\"});};// UseEffects\nuseEffect(function(){var onLoad=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return checkIfWalletIsConnected();case 2:_context7.next=4;return getCreditsLeft();case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function onLoad(){return _ref7.apply(this,arguments);};}();window.addEventListener('load',onLoad);return function(){return window.removeEventListener('load',onLoad);};},[]);useEffect(function(){if(walletAddress){console.log('Fetching Mekamounts...');// Call Solana program here.\ngrabAllNFTs();// Set state\n// setGifList(TEST_GIFS);\n}},[walletAddress]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:walletAddress?'authed-container':'container',children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"header\",children:[\"\\uD83E\\uDDBE Mekamount PFP Portal [CR Left: \",creditsLeft,\"]\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:\"N F T \\u2728\"}),!walletAddress&&renderNotConnectedContainer(),walletAddress&&renderConnectedContainer()]}),/*#__PURE__*/_jsx(\"div\",{className:\"spacing\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-container\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"Twitter Logo\",className:\"twitter-logo\",src:twitterLogo}),/*#__PURE__*/_jsx(\"a\",{className:\"footer-text\",href:TWITTER_LINK,target:\"_blank\",rel:\"noreferrer\",children:\"Crafted By @\".concat(TWITTER_HANDLE)})]})]})});};export default App;","map":{"version":3,"sources":["/Users/drkrueger/Work/foodfrenzy/solana/mekamounts/mekamountpfp/web/src/App.js"],"names":["React","useEffect","useState","querystring","twitterLogo","mekaHolder","pfpHolder","download","TWITTER_HANDLE","TWITTER_LINK","App","creditsLeft","setCreditsLeft","walletAddress","setWalletAddress","mekAddress","setMekAddress","pfpAddress","setPfpAddress","pfpScale","setPfpScale","isBuilding","setIsBuilding","didDownload","setDidDownload","isGettingNFTS","setIsGettingNFTs","nftList","setNftList","getURLData","baseURL","path","params","requestedURL","length","stringify","Promise","resolve","reject","fetch","method","cache","headers","redirect","referrerPolicy","then","response","json","data","catch","error","grabAllNFTs","account","promises","forEach","token","tokenAmount","amount","decimals","push","tokenAddress","all","nfts","nftMetadata","nft","metadata","Error","name","collection","tokenInfo","symbol","image","url","address","console","log","sort","a","b","localeCompare","alert","getCreditsLeft","credits","clearIMG","downloadNewMek","blob","size","scrollToTop","window","scrollTo","top","behavior","selectNFT","includes","renderConnectedContainer","filter","map","checkIfWalletIsConnected","solana","isPhantom","connect","onlyIfTrusted","publicKey","toString","connectWallet","sendGif","renderNotConnectedContainer","onLoad","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import Mekamount, { runScript } from './createMekamount.js';\nimport querystring from 'query-string';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport mekaHolder from './assets/meka.png';\nimport pfpHolder from './assets/pfp.png';\nimport download from 'downloadjs';\nimport './App.css';\n\n// Constants\nconst TWITTER_HANDLE = 'CoachChuckFF';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  // State\n  const [creditsLeft, setCreditsLeft] = useState(0);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [mekAddress, setMekAddress] = useState(null);\n  const [pfpAddress, setPfpAddress] = useState(null);\n  const [pfpScale, setPfpScale] = useState(0.15);\n  const [isBuilding, setIsBuilding] = useState(false);\n  const [didDownload, setDidDownload] = useState(false);\n  const [isGettingNFTS, setIsGettingNFTs] = useState(false);\n  const [nftList, setNftList] = useState([]);\n\n  const getURLData = (baseURL = '', path = '', params = {}) => {\n    let requestedURL = baseURL + path + ((params.length == 0) ? \"\" : \"?\" + querystring.stringify(params));\n    return new Promise((resolve, reject) => {\n      fetch(requestedURL, {\n        method: 'GET',\n        cache: 'no-cache',\n        headers: {'accept': 'application/json'},\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      }).then((response) => {\n        response.json().then((data)=>{\n          resolve(data);\n        })\n        .catch((error) => {reject(`Could not get JSON (${requestedURL})`);});\n      })\n      .catch((error) => {reject(`Could not get URL (${requestedURL})`);});\n    });\n  }\n\n  const grabAllNFTs = () => {\n    if(!isGettingNFTS){\n      setIsGettingNFTs(true);\n      getURLData(\n        \"https://public-api.solscan.io\",\n        \"/account/tokens\",\n        { account: `${walletAddress}`,},\n      ).then((data) => {\n\n        //Grab NFT Tokens\n        let promises = [];\n        data.forEach(token => {\n          if(token.tokenAmount != null && token.tokenAmount.amount == 1 && token.tokenAmount.decimals == 0){\n            promises.push(\n              getURLData(\n                \"https://public-api.solscan.io\",\n                `/account/${token.tokenAddress}`,\n              )\n            );\n          }\n        });\n\n        // Get Metadata on all\n        Promise.all(promises)\n        .then((nfts)=>{\n          \n          //Grab only the useful stuff\n          let nftMetadata = [];\n          nfts.forEach(nft=> {\n            try{\n              if(nft.metadata == null){throw new Error('No metadata');}\n              if(nft.metadata.data.name == null){throw new Error('No name!');}\n              if(nft.metadata.data.collection == null && nft.tokenInfo.symbol == null){throw new Error(nft.metadata.data.name + \" Bad collection\");}\n              if(nft.metadata.data.image == null){throw new Error(nft.metadata.data.name + \" Bad image\");}\n              if(nft.account == null){throw new Error(nft.metadata.data.name + \" Bad account\");}\n\n              //Fuck Collections\n              let collection = null;\n              if(nft.metadata.data.collection != null){\n                if(typeof nft.metadata.data.collection === 'string'){\n                  collection = nft.metadata.data.collection;\n                } else {\n                  collection = nft.metadata.data.collection.name;\n                }\n              }\n              if(collection == null) collection = nft.tokenInfo.symbol;\n              if(collection == null) throw new Error(nft.metadata.data.name + \" Bad collection... Again\");\n\n              nftMetadata.push(\n                {\n                  name : nft.metadata.data.name, \n                  collection : collection,\n                  url : nft.metadata.data.image,\n                  address : nft.account,\n                }\n              );\n            } catch (error){\n              console.log(error);\n            }\n          });\n\n          //Sort\n          nftMetadata.sort((a, b)=>{\n            return a.collection.localeCompare(b.collection);\n          });\n\n          //Update\n          setNftList(nftMetadata);\n          setIsGettingNFTs(false);\n        })\n        .catch((error) => {\n          alert('Could not grab ALL NFTs');\n          console.log(error);\n          setIsGettingNFTs(false);\n        })\n\n      })\n      .catch((error) => {\n        alert('Could not grab NFTs');\n        console.log(error);\n        setIsGettingNFTs(false);\n      })\n    } else {\n      console.log(\"Crawling...\")\n    }\n  }\n\n  const getCreditsLeft = async () => {\n    try {\n      const response = await fetch(`/credits`);\n      const data = await response.json();\n      setCreditsLeft(data.credits);\n    } catch {\n      console.log(\"Could not grab credits\");\n    }\n  }\n\n  const clearIMG = async () => {\n    try {\n      const response = await fetch(`/clear/${walletAddress}`);\n      const data = await response.json();\n      console.log(data);\n    } catch {\n      console.log(\"Could not grab credits\");\n    }\n  }\n\n  const downloadNewMek = async () => {\n    if(didDownload){\n      alert('You just downloaded!');\n    } else if(mekAddress == null || pfpAddress == null){\n      alert('Need to pick both a Mekamount and PFP');\n    } else if(!isBuilding){\n      setIsBuilding(true);\n      try {\n        const response = await fetch(`/sol/${walletAddress}/meka/${mekAddress.address}/pfp/${pfpAddress.address}/scale/${pfpScale}`);\n        const blob = await response.blob();\n\n        if(blob.size < 500){\n          const data = await response.json();\n          if(data.error != null){\n            alert(data.error);\n          } else {\n            alert('Error merging NFTs');\n          }\n        } else {\n          download(blob, \"mekamount.png\");\n          setDidDownload(true);\n          getCreditsLeft();\n          clearIMG();\n        }\n\n      } catch (error) {\n        alert('Error merging NFTs');\n      }\n\n      setIsBuilding(false);\n    } else {\n      alert('Building...');\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth' // for smoothly scrolling\n    });\n  };\n\n  const selectNFT = (nft) => {\n\n    if(nft.name.includes(\"Mekamounts\")){\n      setMekAddress(nft);\n    } else {\n      setPfpAddress(nft);\n    }\n    \n    // scrollToTop();\n  }\n\n  const renderConnectedContainer = () => (\n    <div className=\"connected-container\">\n        <div className=\"selected-grid\">\n        {<div className=\"selected-item\" key={\"meka\"}>\n          <img src={mekAddress == null ? mekaHolder : mekAddress.url} alt={mekaHolder} />\n          <p className=\"sub-text\">{mekAddress == null ? \"\" : \"Mekamount\"}</p>\n        </div>}\n        {<div className=\"selected-item\" key={\"pfp\"}>\n          <img src={pfpAddress == null ? pfpHolder : pfpAddress.url} alt={pfpHolder} />\n          <p className=\"sub-text\">{pfpAddress == null ? \"\" : \"PFP\"}</p>\n        </div>}\n      </div>\n      <div className='mini-spacing'></div>\n      <button type=\"submit\" className=\"cta-button submit-gif-button\" onClick={downloadNewMek} disabled={isBuilding}>\n        {didDownload ? \"Complete!\" : (isBuilding ? \"Building...\" : \"Build\")}\n      </button>\n      <div className='spacing'></div>\n      <p className=\"sub-text\">Choose your Mekamount...</p>\n      <div className=\"gif-grid\">\n        {/* Map through gifList instead of TEST_GIFS */}\n        {nftList.filter((nft) => { return nft.name.includes(\"Mekamounts\");}).map((nft) => (\n          <div className=\"gif-item\" key={nft.url} onClick={() => {selectNFT(nft)}}>\n            <img src={nft.url} alt={nft.url} />\n            <p className=\"sub-text\">{nft.name}</p>\n            <div className='mini-spacing'></div>\n          </div>\n        ))}\n      </div>\n      <p className=\"sub-text\">Choose your PFP...</p>\n      <div className=\"gif-grid\">\n        {/* Map through gifList instead of TEST_GIFS */}\n        {nftList.filter((nft) => { return !nft.name.includes(\"Mekamounts\");}).map((nft) => (\n          <div className=\"gif-item\" key={nft.url} onClick={() => {selectNFT(nft)}}>\n            <img src={nft.url} alt={nft.url} />\n            <p className=\"sub-text\">{nft.name}</p>\n            <div className='mini-spacing'></div>\n          </div>\n        ))}\n      </div>\n      <div className='spacing'></div>\n    </div>\n  );\n\n  // Actions\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n            'Connected with Public Key:',\n            response.publicKey.toString()\n          );\n\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet 👻');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const { solana } = window;\n  \n    if (solana) {\n      const response = await solana.connect();\n      console.log('Connected with Public Key:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  // const onInputChange = (event) => {\n  //   const { value } = event.target;\n  //   setInputValue(value);\n  // };\n  \n  const sendGif = async () => {\n    // if (inputValue.length > 0) {\n    //   console.log('Gif link:', inputValue);\n    //   setGifList([...gifList, inputValue]);\n    //   setInputValue('');\n    // } else {\n    //   console.log('Empty input. Try again.');\n    // }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  // UseEffects\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n      await getCreditsLeft();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  \n  useEffect(() => {\n    if (walletAddress) {\n      console.log('Fetching Mekamounts...');\n      \n      // Call Solana program here.\n      grabAllNFTs();\n  \n      // Set state\n      // setGifList(TEST_GIFS);\n    }\n  }, [walletAddress]);\n\n  return (\n    <div className=\"App\">\n\t\t\t{/* This was solely added for some styling fanciness */}\n\t\t\t<div className={walletAddress ? 'authed-container' : 'container'}>\n        <div className=\"header-container\">\n          <p className=\"header\">🦾 Mekamount PFP Portal [CR Left: {creditsLeft}]</p>\n          <p className=\"sub-text\">\n            N F T ✨\n          </p>\n          {!walletAddress && renderNotConnectedContainer()}\n          {/* We just need to add the inverse here! */}\n          {walletAddress && renderConnectedContainer()}\n        </div>\n        <div className='spacing'></div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`Crafted By @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}